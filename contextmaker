#!/usr/bin/env python3
"""
Real contextmaker wrapper

This script provides a command-line interface to the real contextmaker package.
"""

import sys
import argparse
from pathlib import Path

try:
    from contextmaker import make
    CONTEXTMAKER_AVAILABLE = True
except ImportError:
    CONTEXTMAKER_AVAILABLE = False
    print("❌ contextmaker package not available")
    print("Install it with: pip install contextmaker")
    sys.exit(1)

def main():
    """Main CLI function"""
    parser = argparse.ArgumentParser(description='contextmaker - Extract documentation from repositories')
    parser.add_argument('repo_name', nargs='?', help='Repository name (e.g., "username/repo")')
    parser.add_argument('--output', '-o', help='Output file path')
    parser.add_argument('--input-path', help='Input repository path')
    parser.add_argument('--version', '-v', action='store_true', help='Show version')
    
    args = parser.parse_args()
    
    if args.version:
        try:
            import contextmaker
            print(f"contextmaker {getattr(contextmaker, '__version__', 'unknown')}")
        except:
            print("contextmaker (version unknown)")
        return
    
    if not CONTEXTMAKER_AVAILABLE:
        print("❌ contextmaker package not available")
        sys.exit(1)
    
    if not args.repo_name or not args.output:
        parser.print_help()
        sys.exit(1)
    
    try:
        # Call the real contextmaker.make function
        make(args.repo_name, output_path=args.output, input_path=args.input_path)
        print(f"✅ Context generated successfully: {args.output}")
    except Exception as e:
        print(f"❌ Error generating context: {e}")
        sys.exit(1)

if __name__ == "__main__":
    main()
